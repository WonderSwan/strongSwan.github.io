<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>strongSwan.Net</title>
    <description>Write an awesome description for your new site here. You can edit this line in _config.yml. It will appear in your document head meta (for Google search results) and in your feed.xml site description.
</description>
    <link>https://strongSwan.net/</link>
    <atom:link href="https://strongSwan.net/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Thu, 27 Aug 2015 07:04:46 +0800</pubDate>
    <lastBuildDate>Thu, 27 Aug 2015 07:04:46 +0800</lastBuildDate>
    <generator>Jekyll v2.5.3</generator>
    
      <item>
        <title>Blog: Finding the optimal NAT Keepalive interval</title>
        <description>&lt;p&gt;&lt;a href=&quot;https://github.com/jsharkey/android-tools/tree/master/udpnat&quot;&gt;udpnat&lt;/a&gt; is a useful tool to figure out the optimal interval for sending out UDP keepalive packets in a specific environment. From the description:&lt;/p&gt;

&lt;p&gt;&amp;emsp;&amp;emsp;When a client sends UDP packets from behind a NAT, the NAT creates a temporary port mapping to allow the external server to send reply packets. If no UDP packets are seen after a given timeout, the port is reclaimed by the NAT, and the server can no longer reach the client. &amp;lt;!--more--&amp;gt;&lt;/p&gt;

&lt;p&gt;&amp;emsp;&amp;emsp;This timeout becomes important on mobile devices, where waking up the radio has battery impact. (If you send NAT keepalive packets too frequently, your battery drains quickly; if too sparsely, the NAT mapping will timeout.)&lt;/p&gt;

&lt;p&gt;&amp;emsp;&amp;emsp;NAT devices can have different timeouts, and you may not have access to their configuration details. This tool is designed to help you empirically derive that timeout. It operates in a “master” or “slave” mode. The master is responsible for sending a ping request and then sleeping. The slave passively replies to any incoming pings.&lt;/p&gt;

&lt;p&gt;&amp;emsp;&amp;emsp;This tool can be useful for setting the natt_keepalive timer variable in racoon.conf when running an IPsec VPN in NAT-Traversal (NAT-T) mode.&lt;/p&gt;

&lt;p&gt;Here is the output of my workstation behind a NAT gateway pinging remotehost.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;./udpnat -h remotehost -p 9999
Outgoing packet to remotehost:9999
Started slave mode
Waiting &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; ping &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; just over &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt; sec...
Received ping&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; sending reply!
Waiting &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; ping &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; just over &lt;span class=&quot;m&quot;&gt;15&lt;/span&gt; sec...
Received ping&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; sending reply!
Waiting &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; ping &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; just over &lt;span class=&quot;m&quot;&gt;30&lt;/span&gt; sec...
Received ping&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; sending reply!
Waiting &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; ping &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; just over &lt;span class=&quot;m&quot;&gt;60&lt;/span&gt; sec...
Received ping&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; sending reply!
Waiting &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; ping &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; just over &lt;span class=&quot;m&quot;&gt;90&lt;/span&gt; sec...
Received ping&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; sending reply!
Waiting &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; ping &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; just over &lt;span class=&quot;m&quot;&gt;120&lt;/span&gt; sec...
Received ping&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; sending reply!
Waiting &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; ping &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; just over &lt;span class=&quot;m&quot;&gt;150&lt;/span&gt; sec...
Received ping&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; sending reply!
Waiting &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; ping &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; just over &lt;span class=&quot;m&quot;&gt;180&lt;/span&gt; sec...
Received ping&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; sending reply!
Waiting &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; ping &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; just over &lt;span class=&quot;m&quot;&gt;240&lt;/span&gt; sec...
Received ping&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; sending reply!
Waiting &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; ping &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; just over &lt;span class=&quot;m&quot;&gt;300&lt;/span&gt; sec...
Failed with timeout
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Apparently, my router (a not-so-young-anymore FritzBox 7270) closes UDP ports somewhere between 4 and 5 minutes of inactivity. Mobile networks usually have much shorter timeout values, somewhere between 1 and 2 minutes.&lt;/p&gt;

&lt;p&gt;What can you do with this information? For example, strongSwan has a default NAT keepalive interval of 20 seconds. If you are confident that ports are kept open much longer than that, you could increase the length of this interval (via the &lt;code&gt;charon.keep_alive&lt;/code&gt; key). This could have a positive effect on battery if you use a mobile VPN client.
&lt;a href=&quot;http://jsharkey.org/blog/2012/09/22/deploying-a-pure-ipsec-pki-vpn-server-for-android-devices/&quot;&gt;via jsharkey.org&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.zeitgeist.se/2013/11/27/the-optimal-nat-keepalive-interval/&quot;&gt;https://www.zeitgeist.se/2013/11/27/the-optimal-nat-keepalive-interval/&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Thu, 09 Jul 2015 00:54:46 +0800</pubDate>
        <link>https://strongSwan.net/blog/ikev2-nat-keepalive-interval</link>
        <guid isPermaLink="true">https://strongSwan.net/blog/ikev2-nat-keepalive-interval</guid>
        
        
        <category>blog</category>
        
        <category>nat</category>
        
        <category>keepalive</category>
        
        <category>strongswan</category>
        
      </item>
    
      <item>
        <title>Blog: IPSEC VPN on Centos 7 with strongSwan</title>
        <description>&lt;p&gt;&lt;b&gt;This is a guide on setting up an IPSEC VPN server with CentOS 7 using StrongSwan as the IPsec server and for authentication.&lt;/b&gt; It has a detailed explanation with every step. We choose the IPSECP protocol stack because of recent vulnerabilities found in pptpd VPNs and because it is supported on all recent operating systems by default. More than ever, your freedom and privacy when online is under threat. Governments and ISPs want to control what you can and can&amp;#39;t see while keeping a record of everything you do, and even the shady-looking guy lurking around your coffee shop or the airport gate can grab your bank details easier than you may think. A self hosted VPN lets you surf the web the way it was intended: anonymously and without oversight.&amp;lt;!--more--&amp;gt;&lt;/p&gt;

&lt;h5&gt;Why a VPN?&lt;/h5&gt;

&lt;p&gt;More than ever, your freedom and privacy when online is under threat. Governments and ISPs want to control what you can and can&amp;#39;t see while keeping a record of everything you do, and even the shady-looking guy lurking around your coffee shop or the airport gate can grab your bank details easier than you may think. A self hosted VPN lets you surf the web the way it was intended: anonymously and without oversight.&lt;/p&gt;

&lt;p&gt;A VPN (virtual private network) creates a secure, encrypted tunnel through which all of your online data passes back and forth. Any application that requires an internet connection works with this self hosted VPN, including your web browser, email client, and instant messaging program, keeping everything you do online hidden from prying eyes while masking your physical location and giving you unfettered access to any website or web service no matter where you happen to live or travel to.&lt;/p&gt;

&lt;p&gt;IPSEC encrypts your IP packets to provide encryption and authentication, so no one can decrypt or forge data between your clients and your server. It also provides a tunnel to send data to the server.&lt;/p&gt;

&lt;p&gt;To work trough this tutorial you should have:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;1 CentOS 7 server with at least 1 public IP address and root access&lt;/li&gt;
&lt;li&gt;1 (or more) clients running an OS that support IPsec IKEv2 vpns (Ubuntu, Mac OS, Windows 7+, Android 4+).&lt;/li&gt;
&lt;li&gt;Ports 4500/UDP, 500/UDP, 51/UDP and 50/UDP opened in the firewall.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I do all the steps as the root user. You should do to, but only via * -i* or * su -*.&lt;/p&gt;

&lt;h5&gt;No L2TP?&lt;/h5&gt;

&lt;p&gt;The previous tutorials all used L2TP to set up the VPN tunnel and use IPSEC only for the encryption. With the IKEv2 protocol and recent operating systems (like OS X 10.8+, Android 4+, iOS 6+ and Windows 7+) supporting IKEv2 we can also use IPSEC to set up the tunnel, before we used IPSEC to do that.&lt;/p&gt;

&lt;p&gt;This VPN will therefore not work out of the box on older operating systems. See my other tutorials with L2TP on how to do that.&lt;/p&gt;

&lt;h5&gt;Overview&lt;/h5&gt;

&lt;p&gt;The tutorial consists out of the following steps:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Install packages&lt;/li&gt;
&lt;li&gt;Generate certificates&lt;/li&gt;
&lt;li&gt;Configure IPSEC&lt;/li&gt;
&lt;li&gt;Configure Firewall&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Android and Windows client configuration is covered at the end of the tutorial.&lt;/p&gt;

&lt;h5&gt;Install EPEL 7:&lt;/h5&gt;

&lt;p&gt;Strongswan packages are available in the EPEL. The CentOS/RHEL repo&amp;#39;s only ship Libreswan, which is not what we&amp;#39;ll use in this tutorial. You can read more about the EPEL here: &lt;a href=&quot;https://fedoraproject.org/wiki/EPEL&quot;&gt;https://fedoraproject.org/wiki/EPEL&lt;/a&gt;, packages can be found here: &lt;a href=&quot;http://ftp.nluug.nl/pub/os/Linux/distr/fedora-epel/7/x86_64/repoview/epel-release.html&quot;&gt;http://ftp.nluug.nl/pub/os/Linux/distr/fedora-epel/7/x86_64/repoview/epel-release.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Install and enable the EPEL using Yum:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;yum install http://ftp.nluug.nl/pub/os/Linux/distr/fedora-epel/7/x86_64/e/epel-release-7-5.noarch.rpm
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h5&gt;Install Strongswan&lt;/h5&gt;

&lt;p&gt;After the EPEL is enabled we can install StrongSwan. StrongSwan is a descendant of FreeS/WAN, just like Openswan or Libreswan. Strongswan however has a very active community and is actively developed, whereas the other ones are less. You can read more about Strongswan on wikipedia or &lt;a href=&quot;https://strongswan.org/&quot;&gt;their website&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;yum install strongswan
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h5&gt;Certificates&lt;/h5&gt;

&lt;p&gt;The VPN server will identify itself with a certificate to the clients. The clients can use a certificate to authenticate themself, this tutorial however keeps it simple and sets up username and password authentication as well.&lt;/p&gt;

&lt;p&gt;On Android with the StrongSwan Application you can just import the &lt;code&gt;.p12&lt;/code&gt; we are going to create later on. On Windows 7, we&amp;#39;ll use &lt;code&gt;EAP&lt;/code&gt; to configure a username and password for our client.&lt;/p&gt;

&lt;p&gt;You might want to install &lt;code&gt;haveged&lt;/code&gt; to speed up the key generation process:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;yum install haveged
systemctl &lt;span class=&quot;nb&quot;&gt;enable &lt;/span&gt;haveged
systemctl start haveged
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Haveged provides a constant source of entropy and randomness.&lt;/p&gt;

&lt;p&gt;Start by creating a self singed root CA. Create a private key:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; /etc/strongswan
strongswan pki --gen --type rsa --size &lt;span class=&quot;m&quot;&gt;4096&lt;/span&gt; --outform der &amp;gt; ipsec.d/private/strongswanKey.der
chmod &lt;span class=&quot;m&quot;&gt;600&lt;/span&gt; ipsec.d/private/strongswanKey.der
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Next generate a self signed root CA certificate:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;strongswan pki --self --ca --lifetime &lt;span class=&quot;m&quot;&gt;3650&lt;/span&gt; --in ipsec.d/private/strongswanKey.der --type rsa --dn &lt;span class=&quot;s2&quot;&gt;&amp;quot;C=NL, O=Example Company, CN=strongSwan Root CA&amp;quot;&lt;/span&gt; --outform der &amp;gt; ipsec.d/cacerts/strongswanCert.der
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can view the certificate properties with the following command:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;strongswan  pki --print --in ipsec.d/cacerts/strongswanCert.der
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Example output:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;cert:      X509
subject:  &lt;span class=&quot;s2&quot;&gt;&amp;quot;C=NL, O=Example Company, CN=strongSwan Root CA&amp;quot;&lt;/span&gt;
issuer:   &lt;span class=&quot;s2&quot;&gt;&amp;quot;C=NL, O=Example Company, CN=strongSwan Root CA&amp;quot;&lt;/span&gt;
validity:  not before Dec &lt;span class=&quot;m&quot;&gt;24&lt;/span&gt; 07:40:57 2014, ok
           not after  Dec &lt;span class=&quot;m&quot;&gt;21&lt;/span&gt; 07:40:57 2024, ok &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;expires in &lt;span class=&quot;m&quot;&gt;3649&lt;/span&gt; days&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
serial:    74:3b:96:ab:4c:14:1d:78
flags:     CA CRLSign self-signed
subjkeyId: d8:fb:1f:ae:15:7c:02:4c:d7:95:bc:dd:9c:40:e4:db:33:38:8a:b4
pubkey:    RSA &lt;span class=&quot;m&quot;&gt;4096&lt;/span&gt; bits
keyid:     c6:3a:c8:2e:31:cf:12:aa:67:4f:7c:da:65:3c:4f:84:bc:69:46:02
subjkey:   d8:fb:1f:ae:15:7c:02:4c:d7:95:bc:dd:9c:40:e4:db:33:38:8a:b4
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Generate the VPN Host key. This is the keypair the VPN server host will use to authenticate itself to clietns. First the private key:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;strongswan pki --gen --type rsa --size &lt;span class=&quot;m&quot;&gt;2048&lt;/span&gt; --outform der &amp;gt; ipsec.d/private/vpnHostKey.der
chmod &lt;span class=&quot;m&quot;&gt;600&lt;/span&gt; ipsec.d/private/vpnHostKey.der
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The public key:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;strongswan pki --pub --in ipsec.d/private/vpnHostKey.der --type rsa &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; strongswan pki --issue --lifetime &lt;span class=&quot;m&quot;&gt;730&lt;/span&gt; --cacert ipsec.d/cacerts/strongswanCert.der --cakey ipsec.d/private/strongswanKey.der --dn &lt;span class=&quot;s2&quot;&gt;&amp;quot;C=NL, O=Example Company, CN=vpn.example.org&amp;quot;&lt;/span&gt; --san vpn.example.com --san vpn.example.net --san 213.187.243.183  --san @213.187.243.183 --flag serverAuth --flag ikeIntermediate --outform der &amp;gt; ipsec.d/certs/vpnHostCert.der
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The domain name or IP address of your VPN server, which is later entered in the clients connection properties, MUST be contained either in the subject Distinguished Name (CN) and/or in a subject Alternative Name (&lt;code&gt;--san&lt;/code&gt;). If this does not match the clients will fail to connect.&lt;/p&gt;

&lt;p&gt;The built in Windows 7 VPN client needs the &lt;code&gt;serverAuth&lt;/code&gt; extended key usage flag in your host certificate as shown above, or the client will refuse to connect. In addition, OS X 10.7.3 or older requires the &lt;code&gt;ikeIntermediate&lt;/code&gt; flag, which we also add here.&lt;/p&gt;

&lt;p&gt;We add the IP address twice, one with an &lt;code&gt;@&lt;/code&gt; in front so that it gets added as an &lt;code&gt;subjectAltName&lt;/code&gt; of the &lt;code&gt;dNSName&lt;/code&gt; type and one of the &lt;code&gt;iPAddess&lt;/code&gt; type.&lt;/p&gt;

&lt;p&gt;Let&amp;#39;s view the certificate:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;strongswan pki --print --in ipsec.d/certs/vpnHostCert.der
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Output:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;cert:      X509
subject:  &lt;span class=&quot;s2&quot;&gt;&amp;quot;C=NL, O=Example Company, CN=vpn.example.org&amp;quot;&lt;/span&gt;
issuer:   &lt;span class=&quot;s2&quot;&gt;&amp;quot;C=NL, O=Example Company, CN=strongSwan Root CA&amp;quot;&lt;/span&gt;
validity:  not before Dec &lt;span class=&quot;m&quot;&gt;24&lt;/span&gt; 12:14:00 2014, ok
           not after  Dec &lt;span class=&quot;m&quot;&gt;23&lt;/span&gt; 12:14:00 2016, ok &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;expires in &lt;span class=&quot;m&quot;&gt;729&lt;/span&gt; days&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
serial:    70:27:27:e3:58:d1:a7:d3
altNames:  vpn.example.com, vpn.example.net, 213.187.243.183, 213.187.243.183
flags:     serverAuth iKEIntermediate
authkeyId: d1:72:26:da:6b:50:e0:4d:89:f8:39:f9:7f:b9:97:48:04:df:2b:00
subjkeyId: 2b:03:2a:36:d5:6e:37:69:b8:79:0f:36:35:b6:b4:3d:b2:76:9d:2e
pubkey:    RSA &lt;span class=&quot;m&quot;&gt;2048&lt;/span&gt; bits
keyid:     60:af:b0:25:bc:19:eb:b6:b4:4c:b0:f9:9f:ee:75:06:78:94:22:6f
subjkey:   2b:03:2a:36:d5:6e:37:69:b8:79:0f:36:35:b6:b4:3d:b2:76:9d:2e
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can also use OpenSSL to see the contents, here is an excerpt:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;openssl x509 -inform DER -in ipsec.d/certs/vpnHostCert.der -noout -text
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Output:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;Certificate:
            Data:
                Version: &lt;span class=&quot;m&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0x2&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
                Serial Number: &lt;span class=&quot;m&quot;&gt;8081471913740838867&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0x702727e358d1a7d3&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
            Signature Algorithm: sha1WithRSAEncryption
                Issuer: &lt;span class=&quot;nv&quot;&gt;C&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;NL, &lt;span class=&quot;nv&quot;&gt;O&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Example Company, &lt;span class=&quot;nv&quot;&gt;CN&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;strongSwan Root CA
                Validity
                    Not Before: Dec &lt;span class=&quot;m&quot;&gt;24&lt;/span&gt; 11:14:00 &lt;span class=&quot;m&quot;&gt;2014&lt;/span&gt; GMT
                    Not After : Dec &lt;span class=&quot;m&quot;&gt;23&lt;/span&gt; 11:14:00 &lt;span class=&quot;m&quot;&gt;2016&lt;/span&gt; GMT
                Subject: &lt;span class=&quot;nv&quot;&gt;C&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;NL, &lt;span class=&quot;nv&quot;&gt;O&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Example Company, &lt;span class=&quot;nv&quot;&gt;CN&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;vpn.example.org
                Subject Public Key Info:
                    Public Key Algorithm: rsaEncryption
                        Public-Key: &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;2048&lt;/span&gt; bit&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;...&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
        X509v3 extensions:
        X509v3 Authority Key Identifier: 
            keyid:D1:72:26:DA:6B:50:E0:4D:89:F8:39:F9:7F:B9:97:48:04:DF:2B:00

        X509v3 Subject Alternative Name: 
            DNS:vpn.example.com, DNS:vpn.example.net, IP Address:213.187.243.183, DNS:213.187.243.183
        X509v3 Extended Key Usage:
            TLS Web Server Authentication, 1.3.6.1.5.5.8.2.2
        &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;...&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The private key (&lt;code&gt;/etc/openswan/ipsec.d/private/strongswanKey.der&lt;/code&gt;) of the CA should be moved somewhere safe, possibly to a special signing host without access to the Internet. Theft of this master signing key would completely compromise your public key infrastructure. Use it only to generate client certificates when needed.&lt;/p&gt;

&lt;h6&gt;Client certificate&lt;/h6&gt;

&lt;p&gt;Any client will require a personal certificate in order to use the VPN. The process is analogous to generating a host certificate, except that we identify a client certificate by the clients e-mail address rather than a hostname.&lt;/p&gt;

&lt;p&gt;We create a keypair for the example user &amp;quot;John&amp;quot;.&lt;/p&gt;

&lt;p&gt;Private key:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; /etc/strongswan/
strongswan pki --gen --type rsa --size &lt;span class=&quot;m&quot;&gt;2048&lt;/span&gt; --outform der &amp;gt; ipsec.d/private/JohnKey.der
chmod &lt;span class=&quot;m&quot;&gt;600&lt;/span&gt; ipsec.d/private/JohnKey.der
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Public key:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;strongswan pki --pub --in ipsec.d/private/JohnKey.der --type rsa &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; strongswan pki --issue --lifetime &lt;span class=&quot;m&quot;&gt;730&lt;/span&gt; --cacert ipsec.d/cacerts/strongswanCert.der --cakey ipsec.d/private/strongswanKey.der --dn &lt;span class=&quot;s2&quot;&gt;&amp;quot;C=NL, O=Example Company, CN=john@example.org&amp;quot;&lt;/span&gt; --san &lt;span class=&quot;s2&quot;&gt;&amp;quot;john@example.org&amp;quot;&lt;/span&gt; --san &lt;span class=&quot;s2&quot;&gt;&amp;quot;john@example.net&amp;quot;&lt;/span&gt; --outform der &amp;gt; ipsec.d/certs/JohnCert.der
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;A VPN client needs a client certificate, its private key, and the signing CA certificate. The most convenient way is to put everything in a single signed PKCS#12 file and export it with a paraphrase.&lt;/p&gt;

&lt;p&gt;Convert the required keys to PEM formt before converting to a .p12:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; /etc/strongswan/

openssl rsa -inform DER -in ipsec.d/private/JohnKey.der -out ipsec.d/private/JohnKey.pem -outform PEM

openssl x509 -inform DER -in ipsec.d/certs/JohnCert.der -out ipsec.d/certs/JohnCert.pem -outform PEM

openssl x509 -inform DER -in ipsec.d/cacerts/strongswanCert.der -out ipsec.d/cacerts/strongswanCert.pem -outform PEM
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Construct the .p12:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;openssl pkcs12 -export  -inkey ipsec.d/private/JohnKey.pem -in ipsec.d/certs/JohnCert.pem -name &lt;span class=&quot;s2&quot;&gt;&amp;quot;John&amp;#39;s VPN Certificate&amp;quot;&lt;/span&gt;  -certfile ipsec.d/cacerts/strongswanCert.pem -caname &lt;span class=&quot;s2&quot;&gt;&amp;quot;strongSwan Root CA&amp;quot;&lt;/span&gt; -out John.p12
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Enter a password twice, then you have a .p12. You can send &lt;code&gt;John.p12&lt;/code&gt; and its export paraphrase to the person whos going to install it onto the client. In some cases (iOS for example) you have to separately include the CA certificate &lt;code&gt;ipsec.d/cacerts/strongswanCert.pem&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Transport this &lt;code&gt;John.p12&lt;/code&gt; file and the password over seperate channels to a client.&lt;/p&gt;

&lt;p&gt;If you need any more user certificate, repeat the above steps with other user data.&lt;/p&gt;

&lt;h5&gt;IPSEC Configuration&lt;/h5&gt;

&lt;p&gt;The main ipsec configuration file is located in /etc/strongswan. We are going to edit it:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;vim /etc/strongswan/ipsec.conf
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Place the following contents:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;# ipsec.conf - strongSwan IPsec configuration file&lt;/span&gt;

config setup
    &lt;span class=&quot;nv&quot;&gt;charondebug&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ike 2, knl 2, cfg 2, net 2, esp 2, dmn 2,  mgr 2&amp;quot;&lt;/span&gt;

conn %default
    &lt;span class=&quot;nv&quot;&gt;keyexchange&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;ikev2
    &lt;span class=&quot;nv&quot;&gt;ike&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;aes128-sha256-ecp256,aes256-sha384-ecp384,aes128-sha256-modp2048,aes128-sha1-modp2048,aes256-sha384-modp4096,aes256-sha256-modp4096,aes256-sha1-modp4096,aes128-sha256-modp1536,aes128-sha1-modp1536,aes256-sha384-modp2048,aes256-sha256-modp2048,aes256-sha1-modp2048,aes128-sha256-modp1024,aes128-sha1-modp1024,aes256-sha384-modp1536,aes256-sha256-modp1536,aes256-sha1-modp1536,aes256-sha384-modp1024,aes256-sha256-modp1024,aes256-sha1-modp1024!
    &lt;span class=&quot;nv&quot;&gt;esp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;aes128gcm16-ecp256,aes256gcm16-ecp384,aes128-sha256-ecp256,aes256-sha384-ecp384,aes128-sha256-modp2048,aes128-sha1-modp2048,aes256-sha384-modp4096,aes256-sha256-modp4096,aes256-sha1-modp4096,aes128-sha256-modp1536,aes128-sha1-modp1536,aes256-sha384-modp2048,aes256-sha256-modp2048,aes256-sha1-modp2048,aes128-sha256-modp1024,aes128-sha1-modp1024,aes256-sha384-modp1536,aes256-sha256-modp1536,aes256-sha1-modp1536,aes256-sha384-modp1024,aes256-sha256-modp1024,aes256-sha1-modp1024,aes128gcm16,aes256gcm16,aes128-sha256,aes128-sha1,aes256-sha384,aes256-sha256,aes256-sha1!
    &lt;span class=&quot;nv&quot;&gt;dpdaction&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;clear
    &lt;span class=&quot;nv&quot;&gt;dpddelay&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;300s
    &lt;span class=&quot;nv&quot;&gt;rekey&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;no
    &lt;span class=&quot;nv&quot;&gt;left&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;%any
    &lt;span class=&quot;nv&quot;&gt;leftsubnet&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0.0.0.0/0
    &lt;span class=&quot;nv&quot;&gt;leftcert&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;vpnHostCert.der
    &lt;span class=&quot;nv&quot;&gt;right&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;%any
    &lt;span class=&quot;nv&quot;&gt;rightdns&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;8.8.8.8,8.8.4.4
    &lt;span class=&quot;nv&quot;&gt;rightsourceip&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;10.42.42.0/24

conn IPSec-IKEv2
    &lt;span class=&quot;nv&quot;&gt;keyexchange&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;ikev2
    &lt;span class=&quot;nv&quot;&gt;auto&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;add

conn IPSec-IKEv2-EAP
    &lt;span class=&quot;nv&quot;&gt;also&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;IPSec-IKEv2&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;rightauth&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;eap-mschapv2
    &lt;span class=&quot;nv&quot;&gt;rightauthby2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;pubkey
    &lt;span class=&quot;nv&quot;&gt;rightsendcert&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;never
    &lt;span class=&quot;nv&quot;&gt;eap_identity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;%any

conn CiscoIPSec
    &lt;span class=&quot;nv&quot;&gt;keyexchange&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;ikev1
    &lt;span class=&quot;nv&quot;&gt;forceencaps&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;yes
    &lt;span class=&quot;nv&quot;&gt;authby&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;xauthrsasig
    &lt;span class=&quot;nv&quot;&gt;xauth&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;server
    &lt;span class=&quot;nv&quot;&gt;auto&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;add
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This configuration has settings for three types of VPN services: IKEv2 + RSA certificate, IKEv2 + EAP, and IKEv1 + Xauth RSA, thus providing compatibility for a wide range of IPsec clients.&lt;/p&gt;

&lt;p&gt;iOS clients below iOS 8 need to use &lt;code&gt;IKEv1&lt;/code&gt;. Apple added support for IKEv2 in iOS 8, but it needs to be configured using a &lt;a href=&quot;https://wiki.strongswan.org/projects/strongswan/wiki/AppleIKEv2Profile&quot;&gt;custom configuration profile&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;OS X does not support IKEv2 (not on 10.10 or lower) so they need to use ikev1 as well.&lt;/p&gt;

&lt;p&gt;Android 4+ and Windows 7+ support IKEv2 and can use that.&lt;/p&gt;

&lt;p&gt;Clients will get the Google DNS servers and an IP address in the &lt;code&gt;10.42.42.0/24&lt;/code&gt; range. We use a strong ciphersuite.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;leftcert=vpnHostCert.der&lt;/code&gt; expands to the path &lt;code&gt;/etc/strongswan/ipsec.d/certs/vpnHostCert.der&lt;/code&gt;.&lt;/p&gt;

&lt;h5&gt;VPN user accounts and secrets&lt;/h5&gt;

&lt;p&gt;The users are configured in the /etc/strongswan/ipsec.secrets file.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;vim /etc/strongswan/ipsec.secrets
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Example content:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;: RSA vpnHostKey.der

alice : EAP &lt;span class=&quot;s2&quot;&gt;&amp;quot;YzCgnveYuL429fH&amp;quot;&lt;/span&gt; 
bob : EAP &lt;span class=&quot;s2&quot;&gt;&amp;quot;E23pOjvW8z248iAp&amp;quot;&lt;/span&gt; 
hipster: XAUTH &lt;span class=&quot;s2&quot;&gt;&amp;quot;xauth_ikev1_example_password&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In the example above the RSA private key file vpnHostKey.der stored in the &lt;code&gt;/etc/openswan/ipsec.d/private/&lt;/code&gt; directory is not protected by symmetric encryption (a password).&lt;/p&gt;

&lt;p&gt;The format of the EAP MSCHAPv2 user credentials is:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;[&amp;lt;domain&amp;gt;\]&amp;lt;username&amp;gt; : EAP &amp;quot;&amp;lt;plaintext password&amp;gt;&amp;quot; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Add as many users as you like there. The first line allows all users with a valid certificate to use the VPN, the other lines allow users without a certificate to login with a username and password. The space between the username, the colon (:) and EAP needs to be there.&lt;/p&gt;

&lt;p&gt;If you have users that need to use IKEv1 with a password and XAUTH you need to seperately configure those. Note that certificate authentication is prefersed, those users do not have to be configured there.&lt;/p&gt;

&lt;p&gt;If you need to generate password, OpenSSL can help you there:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt; openssl rand -base64 24
 jzHMIj6sqBbSI6LFmXINrwZWkXG9O8GW
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h5&gt;Firewall &amp;amp; Packet Routing&lt;/h5&gt;

&lt;p&gt;Configure the firewall to allow the below ports on the VM. CentOS 7 uses &lt;code&gt;firewalld&lt;/code&gt; to configure &lt;code&gt;iptables&lt;/code&gt;, so lets use that. Add the required ports to the &lt;code&gt;dmz&lt;/code&gt; zone, make sure the server NAT&amp;#39;s our traffic and activate that zone:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;firewall-cmd --zone&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;dmz --permanent --add-rich-rule&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;rule protocol value=&amp;quot;esp&amp;quot; accept&amp;#39;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# ESP (the encrypted data packets)&lt;/span&gt;
firewall-cmd --zone&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;dmz --permanent --add-rich-rule&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;rule protocol value=&amp;quot;ah&amp;quot; accept&amp;#39;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# AH (authenticated headers)&lt;/span&gt;
firewall-cmd --zone&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;dmz --permanent --add-port&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;500/udp &lt;span class=&quot;c&quot;&gt;#IKE  (security associations)&lt;/span&gt;
firewall-cmd --zone&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;dmz --permanent --add-port&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;4500/udp &lt;span class=&quot;c&quot;&gt;# IKE NAT Traversal (IPsec between natted devices)&lt;/span&gt;
firewall-cmd --permanent --add-service&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ipsec&amp;quot;&lt;/span&gt;
firewall-cmd --zone&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;dmz --permanent --add-masquerade
firewall-cmd --permanent --set-default-zone&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;dmz
firewall-cmd --reload
firewall-cmd --list-all
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Configure sysctl to allow packet forwarding:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;vim /etc/sysctl.conf
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Add the following:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;# VPN&lt;/span&gt;
net.ipv4.ip_forward &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; 1
net.ipv4.conf.all.accept_redirects &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; 0
net.ipv4.conf.all.send_redirects &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; 0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Apply with:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;sysctl -p
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;(Or apply with a reboot)&lt;/p&gt;

&lt;h5&gt;Start the VPN&lt;/h5&gt;

&lt;p&gt;All the configuration on the server is now done. Enable the VPN at startup:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;systemctl &lt;span class=&quot;nb&quot;&gt;enable &lt;/span&gt;strongswan
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And start it:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;systemctl start strongswan
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you get errors like below:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;connecting to &lt;span class=&quot;s1&quot;&gt;&amp;#39;unix:///var/run/charon.ctl&amp;#39;&lt;/span&gt; failed: Permission denied
failed to connect to stroke socket &lt;span class=&quot;s1&quot;&gt;&amp;#39;unix:///var/run/charon.ctl&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can use the below command to start the VPN if it does not work correctly:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;strongswan restart
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The following command can be used to see if there are clients connected:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;strongswan status
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;With one (android) client connected, it looks like this:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;Security Associations &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt; up, &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt; connecting&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;:
 IPSec-IKEv2&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;4&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;: ESTABLISHED &lt;span class=&quot;m&quot;&gt;20&lt;/span&gt; seconds ago, 213.187.243.183&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;C&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;NL, &lt;span class=&quot;nv&quot;&gt;O&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Example Company, &lt;span class=&quot;nv&quot;&gt;CN&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;vpn.example.org&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;...198.44.82.171&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;C&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;NL, &lt;span class=&quot;nv&quot;&gt;O&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Example Company, &lt;span class=&quot;nv&quot;&gt;CN&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;john@example.org&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
 IPSec-IKEv2&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;2&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;:  INSTALLED, TUNNEL, ESP in UDP SPIs: c6eadabb_i 58998789_o
 IPSec-IKEv2&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;2&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;:   0.0.0.0/0 &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; 10.42.42.1/32
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href=&quot;https://raymii.org/s/tutorials/IPSEC_vpn_with_CentOS_7.html&quot;&gt;https://raymii.org/s/tutorials/IPSEC_vpn_with_CentOS_7.html&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Thu, 09 Jul 2015 00:54:46 +0800</pubDate>
        <link>https://strongSwan.net/blog/howto-create-your-own-IKEv2-vpn</link>
        <guid isPermaLink="true">https://strongSwan.net/blog/howto-create-your-own-IKEv2-vpn</guid>
        
        
        <category>blog</category>
        
        <category>vpn</category>
        
        <category>strongswan</category>
        
        <category>setup</category>
        
      </item>
    
      <item>
        <title>Blog: How to resolve MTU issue with ipsec tunnel</title>
        <description>&lt;p&gt;Today I ran into a problem with IPsec Xauth PSK and the built-in Android VPN client (Android 4.1.2), resulting in some sites (such as &lt;a href=&quot;http://www.yahoo.com&quot;&gt;www.yahoo.com&lt;/a&gt;) not loading through the VPN tunnel. Turns out I was dealing with MTU issues. &amp;lt;!--more--&amp;gt; When the Android VPN is started, it sets the MTU to 1500 on the tun0 interface:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;ip link show tun0
33: tun0: &amp;lt;POINTOPOINT,UP,LOWER_UP&amp;gt; mtu &lt;span class=&quot;m&quot;&gt;1500&lt;/span&gt; qdisc pfifo_fast state UNKNOWN qlen &lt;span class=&quot;m&quot;&gt;500&lt;/span&gt; link/none
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Looking at the &lt;a href=&quot;https://github.com/android/platform_frameworks_base/blob/dbccd44a638ae8705a5b14bff8b2dd74abc26045/services/java/com/android/server/connectivity/Vpn.java&quot;&gt;Android Source&lt;/a&gt;, it appears someone must have forgotten to take care of IPsec Xauth PSK. With PPTP and L2TP based VPNs, the MTU is reduced to 1400 (line 758 – 778).&lt;/p&gt;

&lt;p&gt;In comparison:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;strongSwan Android client: MTU 1400&lt;/li&gt;
&lt;li&gt;OS X / iOS 7 built-in IPsec client: MTU 1280 (for what it’s worth, 1280 is also the minimum IPv6 packet size and thus the MTU minimum required to make IPv6 work)&lt;/li&gt;
&lt;li&gt;Windows 7 built-in IPsec client: MTU 1400&lt;/li&gt;
&lt;li&gt;Cisco VPN client: MTU 1300&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Among the tested clients, only the connection through the Android VPN client was causing the issue with stalling websites. In a nutshell, I was able to fix it with the following on the VPN server:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;iptables -t mangle -A FORWARD -o eth0 &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
 -p tcp -m tcp --tcp-flags SYN,RST SYN &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
 -m tcpmss --mss 1361:1536 &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
 -j TCPMSS --set-mss 1360

&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo &lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt; &amp;gt;/proc/sys/net/ipv4/ip_no_pmtu_disc
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And here is why.&lt;/p&gt;

&lt;h5&gt;IP fragmentation – The original problem.&lt;/h5&gt;

&lt;p&gt;On the VPN server side, we have the interface set to a standard Ethernet MTU 1500. In the scenario with the Android client, the MTU along the entire path is 1500. This leaves room for up to 1460 bytes of data payload per packet (also referred to as the maximum segment size MSS).&lt;/p&gt;

&lt;p&gt;Keep in mind that IPsec in tunnel mode adds an ESP header and an additional IP header for tunneling the packet (usually with an additional size of around 70-80 bytes). When a packet is nearly the size of the MTU and when you tack on this encapsulation overhead, it is likely to exceed the MTU of the outbound link.  That’s where IP fragmentation kicks in – which could lead to performance degradation of your VPN tunnel. Or worse…&lt;/p&gt;

&lt;h5&gt;Path MTU discovery (PMTUD). A failed solution.&lt;/h5&gt;

&lt;p&gt;To avoid IP fragmentation, many TCP/IP stacks have &lt;a href=&quot;http://www.netheaven.com/pmtu.html&quot;&gt;path MTU discovery (PMTUD)&lt;/a&gt; implemented. To tell you right away: It doesn’t work for me, and it’s not going to work for you either. PMTUD attempts to discover the largest IP datagram that may be sent without fragmentation through an IP path. Instead of fragmenting a too-large IP packet, the VPN server is told (through the Don’t Fragment (DF) flag in the IP header of the sender) to discard the packet and reply with an ICMP fragmentation required (&lt;a href=&quot;http://www.networksorcery.com/enp/protocol/icmp/msg3.htm&quot;&gt;type3, subtype 4&lt;/a&gt;) message.&lt;/p&gt;

&lt;p&gt;Recap: The sender is the website that you try to load on your VPN client.&lt;/p&gt;

&lt;p&gt;When the sender receives this ICMP packet, it learns to use a smaller MTU for packets sent to our VPN server. In theory. In reality, many websites (senders like &lt;a href=&quot;http://www.yahoo.com&quot;&gt;www.yahoo.com&lt;/a&gt;) stupidly implement ICMP filters that break PMTUD functionality. And that’s where hell breaks loose.  The sender is expecting an acknowledgement for the original packet from our server, but since the packet was discarded, the acknowledgment never comes. Time goes by, then the sender repeats sending the too-large packet. The result? The VPN sender discards the packet, again, sends yet another ICMP message, and so on. Meanwhile our client on the other end of the VPN tunnel cannot tell what’s happening and is desperately waiting for some data. Everything appears to be stalled – a state which is also referred to as a black hole connection.&lt;/p&gt;

&lt;p&gt;Because PMTUD doesn’t always work on the Internet, the use of it only makes sense in a site-to-site VPN, where basically one operator maintains the networks and is able to enable the forwarding of the “fragmentation required” ICMP (type 3, subtype 4) notifications in all firewalls in between.&lt;/p&gt;

&lt;h5&gt;MSS size reduction. A working solution.&lt;/h5&gt;

&lt;p&gt;So we can rule out PMTUD, but there is another way to assure that our VPN connection is working properly.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;iptables -t mangle -A FORWARD -o eth0 &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    -p tcp -m tcp --tcp-flags SYN,RST SYN &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    -m tcpmss --mss 1361:1536 &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    -j TCPMSS --set-mss 1360
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This iptables rule reduces the size of the allowed packet size by reducing the MSS of TCP SYN packets. The –set-mss value explicitly sets the MSS to 1360, which is a customary size for IPsec IPv4 interfaces. The –mss option is used to match only those MSS that are between 1361 and 1536 bytes (we don’t want to rewrite the MSS of a VPN client that uses a smaller MSS). The result in a tcpdump:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;05:01:56.795798 IP 172.16.16.1.38695 &amp;gt; r2.ycpi.vip.ac4.yahoo.net.http: Flags &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;S&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;, seq 2621580326, win 14600, options &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;mss 1460,sackOK,TS val &lt;span class=&quot;m&quot;&gt;56614&lt;/span&gt; ecr 0,nop,wscale 6&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;, length 0
05:01:56.795865 IP vpn.zeitgeist.se.38695 &amp;gt; r2.ycpi.vip.ac4.yahoo.net.http: Flags &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;S&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;, seq 2621580326, win 14600, options &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;mss 1360,sackOK,TS val &lt;span class=&quot;m&quot;&gt;56614&lt;/span&gt; ecr 0,nop,wscale 6&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;, length 0
05:01:56.802695 IP r2.ycpi.vip.ac4.yahoo.net.http &amp;gt; vpn.zeitgeit.se.38695: Flags &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;S.&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;, seq 3057551576, ack 2621580327, win 14480, options &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;mss 1460,sackOK,TS val &lt;span class=&quot;m&quot;&gt;1410945796&lt;/span&gt; ecr 56614,nop,wscale 8&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;, length 0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In line 1, you see the request from our Android client through the tunnel to yahoo.com. Notice the MSS is 1460. In the second line, it is our VPN host initiating the TCP handshake with the external site. Only now  the MSS value is rewritten to 1360, thanks to our iptables rule. As a consequence, the TCP connection will use the lower MSS of the two end points, which is 1360. Voila!&lt;/p&gt;

&lt;p&gt;You can go further and restrict the iptables rule to rewrite only those packets that are forwarded from our VPN client:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;iptables -t mangle -A FORWARD -o eth0 &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    -p tcp -m tcp --tcp-flags SYN,RST SYN &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    -s 172.16.16.0/24 &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    -m tcpmss --mss 1361:1536 &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    -j TCPMSS --set-mss 1360
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This assumes that the address pool of your virtual IPs is 172.16.16.0/24 (see rightsourceip in /etc/ipsec.conf).&lt;/p&gt;

&lt;p&gt;There is also an option to determine the MSS size dynamically (“MSS clamping”, via the –clamp-mss-to-pmtu option), but it wouldn’t fix IPsec for clients that set their MTU too high (like in the Android example).&lt;/p&gt;

&lt;p&gt;The MSS iptables rule doesn’t work with UDP applications. UDP is a connectionless protocol; hence there is no way to negotiate a MSS during the handshake. The only solution to guarantee that UDP works is to disable the Don’t Fragment (DF) bit in the IP header of the sender. This will allow our VPN server to fragment any UDP packet, if necessary. In Linux, you do it like this:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo &lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt; &amp;gt;/proc/sys/net/ipv4/ip_no_pmtu_disc
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The VPN server will fragment outgoing UDP packets that exceed the interface MTU, which may not be as great for performance and reliability reasons, but at least it doesn’t break the tunnel connection. Fortunately, most folks don’t use UDP for anything much greater than DNS.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.zeitgeist.se/2013/11/26/mtu-woes-in-ipsec-tunnels-how-to-fix/&quot;&gt;https://www.zeitgeist.se/2013/11/26/mtu-woes-in-ipsec-tunnels-how-to-fix/&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Wed, 08 Jul 2015 00:54:46 +0800</pubDate>
        <link>https://strongSwan.net/blog/how-to-resolve-mtu-issue-with-ipsec-tunnel</link>
        <guid isPermaLink="true">https://strongSwan.net/blog/how-to-resolve-mtu-issue-with-ipsec-tunnel</guid>
        
        
        <category>blog</category>
        
        <category>mtu</category>
        
        <category>ipsec</category>
        
        <category>strongswan</category>
        
      </item>
    
      <item>
        <title>Guides: IKEv2 for Windows 7</title>
        <description>&lt;p&gt;Run the command &lt;strong&gt;MMC.exe&lt;/strong&gt; from a command prompt or from the Windows 7 Search bar.&lt;/p&gt;

&lt;p&gt;If prompted by &lt;strong&gt;UAC&lt;/strong&gt; to allow the MMC to make changes to the computer, click &lt;strong&gt;Yes&lt;/strong&gt;. This should bring up a blank MMC console.&lt;/p&gt;

&lt;p&gt;From the &lt;strong&gt;File&lt;/strong&gt; menu, select &lt;strong&gt;Add/Remove Snap-in&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Add the &lt;strong&gt;Certificates&lt;/strong&gt; Snap-In:&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;responsive-img&quot; src=&quot;/assets/img/guides/windows/snapin_add.png&quot;&gt;&lt;/p&gt;

&lt;p&gt;It is of the &lt;em&gt;&lt;font color=&quot;#E84B49&quot;&gt;UTMOST IMPORTANCE&lt;/font&gt;&lt;/em&gt; that you select &lt;strong&gt;Computer account&lt;/strong&gt;:&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;responsive-img&quot; src=&quot;/assets/img/guides/windows/snapin_computer_account.png&quot;&gt;&lt;/p&gt;

&lt;p&gt;Go into the &lt;strong&gt;Certificates (Local Computer) / Personal / Certificates&lt;/strong&gt; folder:&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;responsive-img&quot; src=&quot;/assets/img/guides/windows/snapin_personal_certificates.png&quot;&gt;&lt;/p&gt;

&lt;p&gt;and select the &lt;strong&gt;Import&lt;/strong&gt; action which will start the &lt;strong&gt;Certificate Import Wizard&lt;/strong&gt;:&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;responsive-img&quot; src=&quot;/assets/img/guides/windows/cert_import_wizard.png&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;font color=&quot;#E84B49&quot;&gt;NEVER DOUBLE-CLICK&lt;/font&gt;&lt;/em&gt; on a PKCS12 certificate file because the content will end
up in the &lt;strong&gt;current user&lt;/strong&gt; instead of the &lt;strong&gt;local computer&lt;/strong&gt; part of the Windows registry
and will not be available for IPsec. A PKCS12 container stores an &lt;strong&gt;end entity certificate&lt;/strong&gt;,
a corresponding &lt;strong&gt;private key&lt;/strong&gt; and usually the &lt;strong&gt;Root CA certificate&lt;/strong&gt; or the whole CA trust chain.
It is recommended to store all this information in the &lt;strong&gt;Personal&lt;/strong&gt; certificate store first and to move
the Root CA certificate to the correct location later on.&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;responsive-img&quot; src=&quot;/assets/img/guides/windows/cert_import_wizard_store.png&quot;&gt;&lt;/p&gt;

&lt;p&gt;Select the PKCS12 (*.p12) certificate file to be imported:&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;responsive-img&quot; src=&quot;/assets/img/guides/windows/cert_import_wizard_path.png&quot;&gt;&lt;/p&gt;

&lt;p&gt;You are prompted for the passphrase the PKCS12 container is protected with:&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;responsive-img&quot; src=&quot;/assets/img/guides/windows/cert_import_wizard_passphrase.png&quot;&gt;&lt;/p&gt;

&lt;p&gt;After the successful PKCS12 import the Root CA certificate can be moved to the
&lt;strong&gt;Trusted Root Certification Authorities / Certificates&lt;/strong&gt; folder:&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;responsive-img&quot; src=&quot;/assets/img/guides/windows/snapin_trusted_ca_certificates.png&quot;&gt;&lt;/p&gt;

&lt;p&gt;Double-clicking on the &lt;strong&gt;end entity certificate&lt;/strong&gt; left in the &lt;strong&gt;Personal / Certificates&lt;/strong&gt; folder
shows that a corresponding private key is present in the registry:&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;responsive-img&quot; src=&quot;/assets/img/guides/windows/cert_general.png&quot;&gt;&lt;/p&gt;

&lt;p&gt;and that a valid certificate trust path has been established:&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;responsive-img&quot; src=&quot;/assets/img/guides/windows/cert_trust_path.png&quot;&gt;&lt;/p&gt;

&lt;p&gt;In the &lt;strong&gt;Network and Sharing Center&lt;/strong&gt; choose &lt;strong&gt;Set up a new connection or network&lt;/strong&gt;
and as a connection option select &lt;strong&gt;Connect to a workplace&lt;/strong&gt;:&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;responsive-img&quot; src=&quot;/assets/img/guides/windows/connect_1.png&quot;&gt;&lt;/p&gt;

&lt;p&gt;Click on &lt;strong&gt;Use my Internet connection (VPN)&lt;/strong&gt;: &lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;responsive-img&quot; src=&quot;/assets/img/guides/windows/connect_2.png&quot;&gt;&lt;/p&gt;

&lt;p&gt;Enter the IPv4 or IPv6 &lt;strong&gt;internet address&lt;/strong&gt; or the fully-qualified hostname of the
strongSwan VPN gateway. The &lt;strong&gt;destination name&lt;/strong&gt; string can be chosen freely -
let&amp;#39;s call the connection VPN:&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;responsive-img&quot; src=&quot;/assets/img/guides/windows/connect_3.png&quot;&gt;&lt;/p&gt;

&lt;p&gt;Enter your user name and password. This information will not be used if the authentication
is based on a machine certificate:&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;responsive-img&quot; src=&quot;/assets/img/guides/windows/connect_4.png&quot;&gt;&lt;/p&gt;

&lt;p&gt;In the &lt;strong&gt;General&lt;/strong&gt; tab of the VPN properties menu the fully-qualified hostname or the
IPv4 or IPv6 address of the strongSwan VPN gateway has already been entered but can be
edited at any time:&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;responsive-img&quot; src=&quot;/assets/img/guides/windows/vpn_properties_general.png&quot;&gt;&lt;/p&gt;

&lt;p&gt;In the &lt;strong&gt;Security&lt;/strong&gt; tab of the VPN Properties menu, select &lt;strong&gt;IKEv2&lt;/strong&gt; as type of VPN and use &lt;strong&gt;machine certificates&lt;/strong&gt;
for authentication:&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;responsive-img&quot; src=&quot;/assets/img/guides/windows/vpn_properties_security.png&quot;&gt;&lt;/p&gt;

&lt;p&gt;A click on &lt;strong&gt;Advanced settings&lt;/strong&gt; pops up a window which allows the MOBIKE protocol to be disabled by removing
the &lt;strong&gt;Mobility&lt;/strong&gt; tick.&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;responsive-img&quot; src=&quot;/assets/img/guides/windows/vpn_properties_advanced.png&quot;&gt;&lt;/p&gt;

&lt;p&gt;Wait for the process to complete setup your connection.   &lt;/p&gt;

&lt;p&gt;If everything goes smoothly, you should be connected to the VPN.&lt;/p&gt;
</description>
        <pubDate>Fri, 26 Jun 2015 00:54:46 +0800</pubDate>
        <link>https://strongSwan.net/guides/</link>
        <guid isPermaLink="true">https://strongSwan.net/guides/</guid>
        
        
        <category>guides</category>
        
      </item>
    
      <item>
        <title>Guides: IKEv2 for Windows Phone</title>
        <description>&lt;p&gt;Download &lt;strong&gt;clientCert.p12&lt;/strong&gt; certificate. Please check your email to find Client Cert Download Address.&lt;/p&gt;

&lt;p&gt;Input strongSwan.net Root CA for Certificate name and tap OK to import the certificate.&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;responsive-img&quot; src=&quot;/assets/img/guides/windowsphone/step1.png&quot;&gt;  &lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;responsive-img&quot; src=&quot;/assets/img/guides/windowsphone/step2.png&quot;&gt;  &lt;/p&gt;

&lt;p&gt;In the App list, Go to &lt;strong&gt;Settings&lt;/strong&gt;, Select &lt;strong&gt;VPN&lt;/strong&gt;. Turn on the VPN status. Select &lt;strong&gt;+&lt;/strong&gt; to add/create a new profile.&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;responsive-img&quot; src=&quot;/assets/img/guides/windowsphone/step3.png&quot;&gt;  &lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;responsive-img&quot; src=&quot;/assets/img/guides/windowsphone/step4.png&quot;&gt;  &lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;responsive-img&quot; src=&quot;/assets/img/guides/windowsphone/step5.png&quot;&gt;  &lt;/p&gt;

&lt;p&gt;Input the following
Server name or IP address: strongSwan VPN Server &lt;strong&gt;IP&lt;/strong&gt; address. 
Type: &lt;strong&gt;IKEv2&lt;/strong&gt;
Connecting Using: &lt;strong&gt;user name+password&lt;/strong&gt;
User name: Your VPN &lt;strong&gt;Username&lt;/strong&gt;
Password: Your VPN &lt;strong&gt;Password&lt;/strong&gt;
Profile name: Give the profile a &lt;strong&gt;name&lt;/strong&gt; to identify this connection
Hit &lt;strong&gt;Save&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;responsive-img&quot; src=&quot;/assets/img/guides/windowsphone/step6.png&quot;&gt;  &lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;responsive-img&quot; src=&quot;/assets/img/guides/windowsphone/step7.png&quot;&gt;  &lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;responsive-img&quot; src=&quot;/assets/img/guides/windowsphone/step8.png&quot;&gt;  &lt;/p&gt;

&lt;p&gt;Tap on newly created profile to connect to VPN. When VPN connection is established Status shows Connected.&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;responsive-img&quot; src=&quot;/assets/img/guides/windowsphone/step9.png&quot;&gt;  &lt;/p&gt;
</description>
        <pubDate>Tue, 16 Jun 2015 00:55:46 +0800</pubDate>
        <link>https://strongSwan.net/guides/windows-phone</link>
        <guid isPermaLink="true">https://strongSwan.net/guides/windows-phone</guid>
        
        
        <category>guides</category>
        
      </item>
    
      <item>
        <title>Guides: IKEv2 for ubuntu</title>
        <description>&lt;p&gt;Download certificates to your ubuntu laptop . Please check your email to find Client Cert Download Address.&lt;/p&gt;

&lt;p&gt;In Debian and Ubuntu, install the &lt;strong&gt;network-manager-strongswan&lt;/strong&gt; packages.&lt;/p&gt;

&lt;p&gt;If you are not running Ubuntu/Debian/Suse, you have to build strongSwan from source.&lt;/p&gt;

&lt;p&gt;To build from source you additionally need the NetworkManager headers for the strongSwan NM backend:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;apt-get install libssl-dev network-manager-dev libnm-util-dev libnm-glib-dev libgnomeui-dev gnome-common
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;NM integration works only for IKEv2. Since on a desktop we have OpenSSL installed anyway, we are going to use libcrypto for all cryptographical operations. &lt;strong&gt;--enable-agent&lt;/strong&gt; builds the ssh-agent private key plugin, EAP plugins are enabled using &lt;strong&gt;--enable-eap-gtc&lt;/strong&gt; &lt;strong&gt;--enable-eap-md5&lt;/strong&gt; &lt;strong&gt;--enable-eap-mschapv2&lt;/strong&gt;. For Smartcard support, &lt;strong&gt;--enable-pkcs11&lt;/strong&gt;. You may omit options you don&amp;#39;t need.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;# get the strongSwan tarball
wget http://download.strongswan.org/strongswan-5.x.x.tar.bz2
tar xjf strongswan-5.x.x.tar.bz2
cd strongswan-5.x.x

# build charon with OpenSSL/NM Plugin
./configure --sysconfdir=/etc --prefix=/usr --libexecdir=/usr/lib \
   --disable-aes --disable-des --disable-md5 --disable-sha1 --disable-sha2 \
   --disable-fips-prf --disable-gmp --enable-openssl --enable-nm --enable-agent \
   --enable-eap-gtc --enable-eap-md5 --enable-eap-mschapv2 --enable-eap-identity
make
make install

# get the NetworkManager strongsSwan plugin as a tarball
wget http://download.strongswan.org/NetworkManager/NetworkManager-strongswan-1.x.x.tar.bz2
tar xjf NetworkManager-strongswan-1.x.x.tar.bz2
cd NetworkManager-strongswan-1.x.x

# build the NetworkManager strongsSwan plugin
./configure --sysconfdir=/etc --prefix=/usr --libexecdir=/usr/lib/NetworkManager --with-charon=/usr/lib/ipsec/charon-nm
make
make install
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Configuration
Click on nm-applet -&amp;gt; VPN Connections -&amp;gt; Configure VPN...&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;responsive-img&quot; src=&quot;/assets/img/guides/ubuntu/ubuntu_001.png&quot;&gt;  &lt;/p&gt;

&lt;p&gt;Add -&amp;gt; Ipsec/IKEv2 (strongswan) -&amp;gt; Create ...&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;responsive-img&quot; src=&quot;/assets/img/guides/ubuntu/ubuntu_002.png&quot;&gt;  &lt;/p&gt;

&lt;p&gt;Configure your client&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;responsive-img&quot; src=&quot;/assets/img/guides/ubuntu/ubuntu_003.png&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;responsive-img&quot; src=&quot;/assets/img/guides/ubuntu/ubuntu_004.png&quot;&gt;  &lt;/p&gt;

&lt;p&gt;Click on nm-applet -&amp;gt; VPN Connections -&amp;gt; Your Connection
&lt;img class=&quot;responsive-img&quot; src=&quot;/assets/img/guides/ubuntu/ubuntu_005.png&quot;&gt;  &lt;/p&gt;

&lt;p&gt;Hoo-ha!&lt;/p&gt;
</description>
        <pubDate>Tue, 16 Jun 2015 00:55:46 +0800</pubDate>
        <link>https://strongSwan.net/guides/ubuntu-linux</link>
        <guid isPermaLink="true">https://strongSwan.net/guides/ubuntu-linux</guid>
        
        
        <category>guides</category>
        
      </item>
    
      <item>
        <title>Guides: IKEv2 for Mac</title>
        <description>&lt;p&gt;Finally,  OS X 10.11 (a.k.a. El Capitan) can support IKEv2 VPN protocol natively. &lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;responsive-img screens&quot; src=&quot;/assets/img/guides/mac/mac_001.png&quot;&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;Server Address = ip
Remote ID = apple.strongSwan.net
Local ID = apple@strongSwan.net
Username: Username
Password: Password
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img class=&quot;responsive-img screens&quot; src=&quot;/assets/img/guides/mac/mac_002.png&quot;&gt;   &lt;/p&gt;
</description>
        <pubDate>Tue, 16 Jun 2015 00:55:46 +0800</pubDate>
        <link>https://strongSwan.net/guides/mac</link>
        <guid isPermaLink="true">https://strongSwan.net/guides/mac</guid>
        
        
        <category>guides</category>
        
      </item>
    
      <item>
        <title>Guides: IKEv2 for iPhone</title>
        <description>&lt;p&gt;Finally,  iOS 9 can support IKEv2 VPN protocol natively. &lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;responsive-img screens&quot; src=&quot;/assets/img/guides/iphone/iphone_001.jpg&quot;&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;Server Address = ip
Remote ID = apple.strongSwan.net
Local ID = apple@strongSwan.net
Username: Username
Password: Password
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
        <pubDate>Tue, 16 Jun 2015 00:55:46 +0800</pubDate>
        <link>https://strongSwan.net/guides/iphone</link>
        <guid isPermaLink="true">https://strongSwan.net/guides/iphone</guid>
        
        
        <category>guides</category>
        
      </item>
    
      <item>
        <title>Guides: IKEv2 for Blackberry</title>
        <description>&lt;p&gt;Download &lt;strong&gt;CACert.pem&lt;/strong&gt; certificate. Please check your email to find CACert.pem Download Address.&lt;/p&gt;

&lt;p&gt;You can download it to your laptop and then place the certificates file into your SD card.&lt;/p&gt;

&lt;p&gt;(Another way is to open the download link in the web browser of your Blackberry phone, the certificate will be installed directly. It is much more simple.) &lt;/p&gt;

&lt;p&gt;Please Contact us if no order email is received after successful payment.&lt;/p&gt;

&lt;p&gt;On the home screen, swipe down from the top of the screen.&lt;/p&gt;

&lt;p&gt;Tap &lt;strong&gt;Settings&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;In the BlackBerry® &lt;strong&gt;System Settings&lt;/strong&gt;, 
&lt;strong&gt;Security and Privacy&lt;/strong&gt; &amp;gt; &lt;strong&gt;Certificates&lt;/strong&gt; &amp;gt; &lt;strong&gt;Import&lt;/strong&gt;  (CACert.pem)&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;responsive-img&quot; src=&quot;/assets/img/guides/blackberry/bb_001.png&quot;&gt;  &lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;responsive-img&quot; src=&quot;/assets/img/guides/blackberry/bb_002.png&quot;&gt;  &lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;responsive-img&quot; src=&quot;/assets/img/guides/blackberry/bb_003.png&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;responsive-img&quot; src=&quot;/assets/img/guides/blackberry/bb_004.png&quot;&gt;  &lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;responsive-img&quot; src=&quot;/assets/img/guides/blackberry/bb_005.png&quot;&gt;  &lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;responsive-img&quot; src=&quot;/assets/img/guides/blackberry/bb_006.png&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;responsive-img&quot; src=&quot;/assets/img/guides/blackberry/bb_007.png&quot;&gt;&lt;/p&gt;

&lt;p&gt;In the BlackBerry® &lt;strong&gt;System Settings&lt;/strong&gt;, 
expand &lt;strong&gt;Networks and Connections&lt;/strong&gt; &amp;gt; &lt;strong&gt;VPN&lt;/strong&gt;.
Click Create VPN profile.&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;responsive-img&quot; src=&quot;/assets/img/guides/blackberry/bb_008.png&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;responsive-img&quot; src=&quot;/assets/img/guides/blackberry/bb_009.png&quot;&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;Profile Name: anything, this field does not matter
Server Address: Server IP
Gateway Type: Generic IKEv2 VPN Server
Authentication Type: EAP-MSCHAPv2
Authentication ID Type: IPv4
MSCHAPv2 EAP Identity: anything, this field does not matter
MSCHAPv2 Username: Username
MSCHAPv2 Password: Password
Gateway Auth Type: PKI
Gateway Auth ID Type: Identity Certificate Distinguished Name
Gateway CA Certificate *: strongSwan Root CA
Perfect Forward Secrecy: not checked
There is no need to change any &amp;#39;Advanced&amp;#39; configurations.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img class=&quot;responsive-img&quot; src=&quot;/assets/img/guides/blackberry/bb_010.png&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;responsive-img&quot; src=&quot;/assets/img/guides/blackberry/bb_011.png&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;responsive-img&quot; src=&quot;/assets/img/guides/blackberry/bb_012.png&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;responsive-img&quot; src=&quot;/assets/img/guides/blackberry/bb_013.png&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;responsive-img&quot; src=&quot;/assets/img/guides/blackberry/bb_014.png&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;responsive-img&quot; src=&quot;/assets/img/guides/blackberry/bb_015.png&quot;&gt;&lt;/p&gt;

&lt;p&gt;If everything goes smoothly, you should be connected to the VPN.&lt;/p&gt;
</description>
        <pubDate>Tue, 16 Jun 2015 00:55:46 +0800</pubDate>
        <link>https://strongSwan.net/guides/blackberry</link>
        <guid isPermaLink="true">https://strongSwan.net/guides/blackberry</guid>
        
        
        <category>guides</category>
        
      </item>
    
      <item>
        <title>Guides: IKEv2 for Android</title>
        <description>&lt;h4&gt;IPSec Xauth RSA&lt;/h4&gt;

&lt;p&gt;Download &lt;strong&gt;clientCert.p12&lt;/strong&gt; certificate. Please check your email to find Client Cert Download Address.&lt;/p&gt;

&lt;p&gt;You can download it to your laptop and then place the certificates file into the root path of your SD card as below. &lt;/p&gt;

&lt;p&gt;(Another way is to open the download link in the web browser of your Android phone, the certificate will be installed directly. It is much more simple.)&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;adb push ClientCert.p12 /sdcard  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Install the certificates from SD card to your phone. We can import the bundle using &lt;strong&gt;Settings&lt;/strong&gt; &amp;gt; &lt;strong&gt;Security&lt;/strong&gt; &amp;gt; &lt;strong&gt;Install from storage&lt;/strong&gt;. &lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;responsive-img&quot; src=&quot;/assets/img/guides/android/android_06.png&quot;&gt;  &lt;/p&gt;

&lt;p&gt;Next let’s configure the VPN client in &lt;strong&gt;Settings&lt;/strong&gt; &amp;gt; &lt;strong&gt;More&lt;/strong&gt; &amp;gt; &lt;strong&gt;VPN&lt;/strong&gt;. Our VPN type is “IPsec Xauth RSA”, 
and we’ll use the client and CA certificates we just installed. &lt;/p&gt;

&lt;p&gt;You’ll also want to configure a trusted DNS server under advanced options.&lt;/p&gt;

&lt;p&gt;(Otherwise Android will use the DNS server obtained from the local network, which could live in a non-routable private network.)&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;responsive-img&quot; src=&quot;/assets/img/guides/android/android_07.png&quot;&gt; &lt;/p&gt;

&lt;p&gt;Finally, we can connect to the VPN with the username and password.&lt;/p&gt;

&lt;div class=&quot;hline&quot;&gt;&lt;/div&gt;

&lt;h4&gt;&amp;quot;strongSwan VPN Client&amp;quot; for Android 4.0 (ICS)+&lt;/h4&gt;

&lt;p&gt;Download and Install &lt;a href=&quot;https://play.google.com/store/apps/details?id=org.strongswan.android&quot;&gt;strongSwan client&lt;/a&gt;. After installation, it will show:&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;responsive-img&quot; src=&quot;/assets/img/guides/android/android_05.png&quot;&gt;&lt;/p&gt;

&lt;p&gt;Download &lt;strong&gt;clientCert.p12&lt;/strong&gt; certificate, but not double tap it or install it. Please check your email to find Client Cert Download Address.&lt;/p&gt;

&lt;p&gt;Open the Strongswan app and tap Add VPN Profile&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Profile Name: &lt;strong&gt;VPN&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Gateway: &lt;strong&gt;IP/Hostname of VPN server&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Type: &lt;strong&gt;IKEv2 Certificate&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;CA Certificate: &lt;strong&gt;Select automatically&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Tap Select &lt;strong&gt;user certificate&lt;/strong&gt;. Tap &lt;strong&gt;Install&lt;/strong&gt;. Navigate to your &lt;strong&gt;clientCert.p12&lt;/strong&gt; certificate and install it. Give the correct password and select the &lt;code&gt;VPN and Apps&lt;/code&gt; usage reference:&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;responsive-img&quot; src=&quot;/assets/img/guides/android/android_01.png&quot;&gt;  &lt;/p&gt;

&lt;p&gt;Select that certificate for use:&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;responsive-img&quot; src=&quot;/assets/img/guides/android/android_02.png&quot;&gt;&lt;/p&gt;

&lt;p&gt;Tap Save:&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;responsive-img&quot; src=&quot;/assets/img/guides/android/android_03.png&quot;&gt;&lt;/p&gt;

&lt;p&gt;To connect, tap the VPN name and it will connect:&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;responsive-img&quot; src=&quot;/assets/img/guides/android/android_04.png&quot;&gt;&lt;/p&gt;

&lt;p&gt;Click &lt;strong&gt;Disconnect&lt;/strong&gt; to exit VPN connection. &lt;/p&gt;
</description>
        <pubDate>Tue, 16 Jun 2015 00:55:46 +0800</pubDate>
        <link>https://strongSwan.net/guides/android</link>
        <guid isPermaLink="true">https://strongSwan.net/guides/android</guid>
        
        
        <category>guides</category>
        
      </item>
    
  </channel>
</rss>
